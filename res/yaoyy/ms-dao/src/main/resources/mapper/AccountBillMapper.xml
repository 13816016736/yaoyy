<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ms.dao.AccountBillDao">
    <resultMap id="AccountBillResultMap" type="com.ms.dao.model.AccountBill">
            <id column="id"  property="id" />
            <result column="code"  property="code" />
            <result column="order_id"  property="orderId" />
            <result column="user_id"  property="userId" />
            <result column="bill_time"  property="billTime" />
            <result column="amounts_payable"  property="amountsPayable" />
            <result column="already_payable"  property="alreadyPayable" />
            <result column="status"  property="status" />
            <result column="repay_time"  property="repayTime" />
            <result column="member_id"  property="memberId" />
            <result column="create_date"  property="createDate" />
        
    </resultMap>

    <resultMap id="AccountBillResultMapVo" type="com.ms.dao.vo.AccountBillVo">
            <id column="id"  property="id" />
            <result column="code"  property="code" />
            <result column="order_id"  property="orderId" />
            <result column="user_id"  property="userId" />
            <result column="bill_time"  property="billTime" />
            <result column="amounts_payable"  property="amountsPayable" />
            <result column="already_payable"  property="alreadyPayable" />
            <result column="status"  property="status" />
            <result column="repay_time"  property="repayTime" />
            <result column="member_id"  property="memberId" />
            <result column="create_date"  property="createDate" />
        
    </resultMap>

    <sql id="Base_Column_List">
        id,code,order_id,user_id,bill_time,amounts_payable,already_payable,status,repay_time,member_id,create_date
    </sql>

    <select id="findById" parameterType="java.lang.Integer" resultMap="AccountBillResultMap">
        select
        <include refid="Base_Column_List" />
        from account_bill
        where id = #{id}
    </select>

    <select id="findAll"  resultMap="AccountBillResultMap">
        select
        <include refid="Base_Column_List" />
        from account_bill
    </select>

    <select id="findByParams" resultMap="AccountBillResultMapVo" parameterType="com.ms.dao.vo.AccountBillVo">
        select
        <include refid="Base_Column_List" />
        from account_bill
        <where>
            <if test="id != null">
                id = #{id}
            </if>
        </where>
    </select>

    <delete id="deleteById" parameterType="java.lang.Integer">
        delete from account_bill
        where id = #{id}
    </delete>

    <insert id="create" useGeneratedKeys="true" keyProperty="id" parameterType="com.ms.dao.model.AccountBill">
        insert into
        account_bill (code,order_id,user_id,bill_time,amounts_payable,already_payable,status,repay_time,member_id,create_date)
        values
        (#{code},#{orderId},#{userId},#{billTime},#{amountsPayable},#{alreadyPayable},#{status},#{repayTime},#{memberId},#{createDate})
    </insert>

    <update id="update" parameterType="com.ms.dao.model.AccountBill">
        update account_bill
        <set>
                                                        
            <if test="code != null">
                code = #{code},
            </if>
                                            
            <if test="orderId != null">
                order_id = #{orderId},
            </if>
                                            
            <if test="userId != null">
                user_id = #{userId},
            </if>
                                            
            <if test="billTime != null">
                bill_time = #{billTime},
            </if>
                                            
            <if test="amountsPayable != null">
                amounts_payable = #{amountsPayable},
            </if>
                                            
            <if test="alreadyPayable != null">
                already_payable = #{alreadyPayable},
            </if>
                                            
            <if test="status != null">
                status = #{status},
            </if>
                                            
            <if test="repayTime != null">
                repay_time = #{repayTime},
            </if>
                                            
            <if test="memberId != null">
                member_id = #{memberId},
            </if>
                                            
            <if test="createDate != null">
                create_date = #{createDate},
            </if>
                            
        </set>
        where id = #{id}
    </update>
</mapper>