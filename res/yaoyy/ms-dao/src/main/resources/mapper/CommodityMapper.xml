<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ms.dao.CommodityDao">
    <resultMap id="CommodityResultMap" type="com.ms.dao.model.Commodity">
            <id column="id"  property="id" />
            <result column="title"  property="title" />
            <result column="name"  property="name" />
            <result column="har_year"  property="harYear" />
            <result column="origin"  property="origin" />
            <result column="spec"  property="spec" />
            <result column="process"  property="process" />
            <result column="exterior"  property="exterior" />
            <result column="executive_standard"  property="executiveStandard" />
            <result column="category_id"  property="categoryId" />
            <result column="picture_url"  property="pictureUrl" />
            <result column="detail"  property="detail" />
            <result column="status"  property="status" />
            <result column="attribute"  property="attribute" />
            <result column="price"  property="price" />
            <result column="unit"  property="unit" />
            <result column="sort"  property="sort" />
            <result column="create_time"  property="createTime" />
            <result column="update_time"  property="updateTime" />
            <result column="minimum_quantity"  property="minimumQuantity" />
            <result column="slogan"  property="slogan" />
            <result column="thumbnail_url"  property="thumbnailUrl" />
            <result column="supplier_id"  property="supplierId" />
            <result column="price_update_time"  property="priceUpdateTime" />
            <result column="warehouse"  property="warehouse" />
            <result column="unwarehouse"  property="unwarehouse" />
    </resultMap>

    <resultMap id="CommodityResultMapVo" type="com.ms.dao.vo.CommodityVo" extends="CommodityResultMap">
        <result column="unitName"  property="unitName" />
        <result column="categoryName"  property="categoryName" />
        <result column="supplierName"  property="supplierName" />
        <result column="supplierTel"  property="supplierTel" />
    </resultMap>

    <sql id="Base_Column_List">
        id,title,name,har_year,origin,spec,process,exterior,executive_standard,category_id,picture_url,detail,
        status,attribute,price,unit,sort,create_time,update_time,minimum_quantity,slogan,thumbnail_url,supplier_id,
        price_update_time,warehouse,unwarehouse
    </sql>

    <sql id="Base_Column_List_Alisa">
        cm.id as id,cm.title as title,cm.name as name,cm.har_year as har_year,
        cm.origin as origin, cm.spec as spec,cm.process as process,cm.exterior as exterior,cm.executive_standard as executiveStandard,cm.category_id as category_id,cm.picture_url as picture_url,
        cm.detail as detail,cm.status as status,cm.attribute as attribute,cm.price as price,
        cm.unit as unit,cm.sort as sort, cm.create_time as create_time,cm.update_time as update_time,
        cm.minimum_quantity as minimum_quantity,cm.slogan as slogan, cm.thumbnail_url as thumbnail_url,
        cm.supplier_id as supplier_id,cm.price_update_time as price_update_time,cm.warehouse as warehouse,cm.unwarehouse as unwarehouse
    </sql>

    <select id="findById" parameterType="java.lang.Integer" resultMap="CommodityResultMap">
        select
        <include refid="Base_Column_List" />
        from commodity
        where id = #{id}
    </select>

    <select id="findAll"  resultMap="CommodityResultMap">
        select
        <include refid="Base_Column_List" />
        from commodity
    </select>

    <select id="findByParams" resultMap="CommodityResultMapVo" parameterType="com.ms.dao.vo.CommodityVo">
        select
        <include refid="Base_Column_List_Alisa" />,
        ca.name as categoryName,
        cd.name as unitName,spD.name as supplierName, sp.phone as supplierTel
        from commodity as cm
        LEFT JOIN category ca on cm.category_id=ca.id
        LEFT JOIN code cd on cm.unit = cd.id
        LEFT JOIN user sp on cm.supplier_id = sp.id
        LEFT JOIN user_detail spD on cm.supplier_id = spD.user_id
        <where>
            <if test="id != null">
                cm.id = #{id}
            </if>
            <if test="categoryName != null">
               and ca.name like  "%"#{categoryName}"%"
            </if>
            <if test="name != null">
               and cm.name = #{name}
            </if>
            <if test="status != null">
               and cm.status = #{status}
            </if>
            <if test="warehouse != null">
                and cm.warehouse > #{warehouse}
            </if>
            <if test="supplierId != null">
                and cm.supplier_id > #{supplierId}
            </if>
        </where>
        ORDER BY cm.category_id,sort DESC
    </select>

    <delete id="deleteById" parameterType="java.lang.Integer">
        delete from commodity
        where id = #{id}
    </delete>

    <insert id="create" useGeneratedKeys="true" keyProperty="id" parameterType="com.ms.dao.model.Commodity">
        insert into
        commodity (title,name,har_year,origin,spec,process,exterior,executive_standard,category_id,picture_url,detail,status,attribute,price,unit,sort,create_time,update_time,minimum_quantity,slogan,thumbnail_url,supplier_id,price_update_time,warehouse,unwarehouse)
        values
        (#{title},#{name},#{harYear},#{origin},#{spec},#{process},#{exterior},#{executiveStandard},#{categoryId},#{pictureUrl},
        #{detail},#{status},#{attribute},#{price},#{unit},#{sort},#{createTime},#{updateTime},#{minimumQuantity},#{slogan},#{thumbnailUrl},#{supplierId},#{priceUpdateTime},#{warehouse},#{unwarehouse})
    </insert>

    <update id="update" parameterType="com.ms.dao.model.Commodity">
        update commodity
        <set>
                                                        
            <if test="title != null">
                title = #{title},
            </if>
                                            
            <if test="name != null">
                name = #{name},
            </if>
                                            
            <if test="harYear != null">
                har_year = #{harYear},
            </if>
                                            
            <if test="origin != null">
                origin = #{origin},
            </if>
                                            
            <if test="spec != null">
                spec = #{spec},
            </if>

            <if test="process != null">
                process = #{process},
            </if>

            <if test="exterior != null">
                exterior = #{exterior},
            </if>

            <if test="executiveStandard != null">
                executive_standard = #{executiveStandard},
            </if>

            <if test="categoryId != null">
                category_id = #{categoryId},
            </if>
                                            
            <if test="pictureUrl != null">
                picture_url = #{pictureUrl},
            </if>
                                            
            <if test="detail != null">
                detail = #{detail},
            </if>
                                            
            <if test="status != null">
                status = #{status},
            </if>
                                            
            <if test="attribute != null">
                attribute = #{attribute},
            </if>
                                            
            <if test="price != null">
                price = #{price},
            </if>
                                            
            <if test="unit != null">
                unit = #{unit},
            </if>
                                            
            <if test="sort != null">
                sort = #{sort},
            </if>

            <if test="createTime != null">
                create_time = #{createTime},
            </if>
                                            
            <if test="updateTime != null">
                update_time = #{updateTime},
            </if>

            <if test="minimumQuantity != null">
                minimum_quantity = #{minimumQuantity},
            </if>

            <if test="slogan != null">
                slogan = #{slogan},
            </if>

            <if test="thumbnailUrl != null">
                thumbnail_url = #{thumbnailUrl},
            </if>

            <if test="supplierId != null">
                supplier_id = #{supplierId},
            </if>

            <if test="supplierId != null">
                supplier_id = #{supplierId},
            </if>
            <if test="priceUpdateTime != null">
                price_update_time = #{priceUpdateTime},
            </if>

            <if test="warehouse != null">
                warehouse = #{warehouse},
            </if>
            <if test="unwarehouse != null">
                unwarehouse = #{unwarehouse},
            </if>
        </set>
        where id = #{id}
    </update>

    <select id="findByIds" parameterType="java.lang.Integer" resultMap="CommodityResultMapVo">
        select
        <include refid="Base_Column_List_Alisa" />,
        cd.name as unitName
        from commodity cm
        LEFT JOIN code cd on cm.unit = cd.id
        where cm.id in
        <foreach collection="list" item="item" index="index" open="(" close=")" separator=",">
            #{item}
        </foreach>
        and cm.status = 1
    </select>

    <select id="searchComodity" resultMap="CommodityResultMapVo" parameterType="com.ms.dao.model.Commodity">
        select
        <include refid="Base_Column_List" />
        from commodity
        <where>
            status = 1
            <if test="name!= null">
             and  name like CONCAT('%','${name}','%' )
            </if>
        </where>

    </select>

    <select id="findByName" parameterType="java.lang.String" resultMap="CommodityResultMap">
        select
        <include refid="Base_Column_List" />
        from commodity
        where name = #{name}
    </select>


    <select id="findVoByPage" resultMap="CommodityResultMapVo" >
        select
        <include refid="Base_Column_List_Alisa" />,
        ca.name as categoryName
        from commodity as cm
        LEFT JOIN category ca on cm.category_id=ca.id
    </select>


    <select id="findByCategoryId" resultMap="CommodityResultMapVo" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List_Alisa" />,
        ca.name as categoryName,
        cd.name as unitName
        from commodity as cm
        LEFT JOIN category ca on cm.category_id=ca.id
        LEFT JOIN code cd on cm.unit = cd.id
        where cm.category_id = #{id} and cm.status = 1
    </select>

    <update id="updateStatusByCategoryId" parameterType="com.ms.dao.model.Commodity">

        update commodity
        <set>
        <if test="status != null">
            status = #{status},
        </if>
        </set>
        where category_id=#{categoryId}

    </update>

    <update id="updateStatusById" parameterType="com.ms.dao.model.Commodity">
        update commodity
        <set>
            <if test="status != null">
                status = #{status},
            </if>
        </set>
        where id=#{id}
    </update>


    <delete id="deleteByCategoryId" parameterType="java.lang.Integer">
        delete from commodity
        where category_id=#{categoryId}
    </delete>


    <select id="findBySupplier" resultMap="CommodityResultMapVo" >
        select
        <include refid="Base_Column_List_Alisa" />,
        ca.name as categoryName,
        cd.name as unitName
        from commodity as cm
        LEFT JOIN category ca on cm.category_id=ca.id
        LEFT JOIN code cd on cm.unit = cd.id
        where cm.supplier_id=#{supplierId}
    </select>

</mapper>