<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ms.dao.UserDao">
    <resultMap id="UserResultMap" type="com.ms.dao.model.User">
        <id column="id" property="id"/>
        <result column="type" property="type"/>
        <result column="phone" property="phone"/>
        <result column="password" property="password"/>
        <result column="salt" property="salt"/>
        <result column="openid" property="openid"/>
        <result column="update_time" property="updateTime"/>
        <result column="create_time" property="createTime"/>
        <result column="source" property="source"/>
        <result column="status" property="status"/>
        <result column="verify" property="verify"/>
        <result column="supplier_id" property="supplierId"/>
    </resultMap>

    <resultMap id="UserResultMapVo" type="com.ms.dao.vo.UserVo" extends="UserResultMap">
        <result column="nickname" property="nickname"/>
        <result column="area" property="area"/>
        <result column="name" property="name"/>
        <result column="remark" property="remark"/>
        <result column="identityType" property="identityType"/>
        <result column="position" property="position"/>
        <result column="categoryIds" property="categoryIds"/>
        <result column="company" property="company"/>
    </resultMap>

    <sql id="Base_Column_List">
        id,type,phone,password,salt,openid,update_time,create_time,source,status,verify,supplier_id
    </sql>
    <sql id="Base_Column_List_Alisa">
        u.id as id,u.type as type,u.phone as phone,u.password as password,u.salt as salt,
        u.openid as openid,u.update_time as update_time,u.create_time as create_time,
        u.source as source,u.status as status,u.verify as verify,u.supplier_id as supplier_id
    </sql>

    <select id="findById" parameterType="java.lang.Integer" resultMap="UserResultMap">
        select
        <include refid="Base_Column_List" />
        from user
        where id = #{id}
    </select>

    <select id="findAll"  resultMap="UserResultMap">
        select
        <include refid="Base_Column_List" />
        from user
    </select>

    <select id="findByParams" resultMap="UserResultMapVo" parameterType="com.ms.dao.vo.UserVo">
        select
        <include refid="Base_Column_List_Alisa" />,
        ud.nickname as nickname, ud.area as area,ud.name as name,ud.remark as remark, ud.type as identityType,
        ud.category_ids as categoryIds,ud.company as company,ud.email as email,ud.qq as qq,
        ud.head_img_url as headImgUrl,a.position as position,ud.contract as contract
        from user u
        LEFT JOIN user_detail ud on u.id = ud.user_id
        LEFT JOIN area a on a.id = ud.area
        <where>
            <if test="id != null">
                u.id = #{id}
            </if>
            <if test="phone != null">
                and u.phone LIKE "%"#{phone}"%"
            </if>
            <if test="name != null">
                and ud.name LIKE "%"#{name}"%"
            </if>
            <if test="identityType != null">
                and ud.type = #{identityType}
            </if>
            <if test="source != null">
                and u.source = #{source}
            </if>
            <if test="status != null">
                and u.status = #{status}
            </if>
            <if test="verify != null">
                and u.verify = #{verify}
            </if>
            <if test="type != null">
                and u.type = #{type}
            </if>
            <if test="supplierId != null">
                and u.supplier_id = #{supplierId}
            </if>
        </where>
        order by u.id desc
    </select>



    <select id="findSupplierSignUser" resultMap="UserResultMapVo" parameterType="com.ms.dao.vo.UserVo">
        select
        u.id as id, ud.area as area,ud.name as name,
        ud.category_ids as categoryIds,ud.company as company,u.phone as phone
        from user u
        LEFT JOIN user_detail ud on u.id = ud.user_id
        LEFT JOIN area a on a.id = ud.area
        <where>
            <if test="id != null">
                u.id = #{id}
            </if>
            <if test="phone != null">
                and u.phone LIKE "%"#{phone}"%"
            </if>
            <if test="name != null">
                and ud.name LIKE "%"#{name}"%"
            </if>
            <if test="status != null">
                and u.status = #{status}
            </if>
            <if test="supplierId != null">
                and u.supplier_id = #{supplierId}
            </if>
            and supplier_id is not NULL
        </where>
        order by u.id desc
    </select>


    <delete id="deleteById" parameterType="java.lang.Integer">
        delete from user
        where id = #{id}
    </delete>

    <insert id="create" useGeneratedKeys="true" keyProperty="id" parameterType="com.ms.dao.model.User">
        insert into
        user (type,phone,password,salt,openid,update_time,create_time,source,status,verify,supplier_id)
        values
        (#{type},#{phone},#{password},#{salt},#{openid},#{updateTime},#{createTime},#{source},#{status},#{verify},#{supplierId})
    </insert>

    <update id="update" parameterType="com.ms.dao.model.User">
        update user
        <set>
                                                        
            <if test="type != null">
                type = #{type},
            </if>
                                            
            <if test="phone != null">
                phone = #{phone},
            </if>
                                            
            <if test="password != null">
                password = #{password},
            </if>
                                            
            <if test="salt != null">
                salt = #{salt},
            </if>
                                            
            <if test="openid != null">
                openid = #{openid},
            </if>
                                            
            <if test="updateTime != null">
                update_time = #{updateTime},
            </if>
                                            
            <if test="createTime != null">
                create_time = #{createTime},
            </if>

            <if test="source != null">
                source = #{source},
            </if>

            <if test="status != null">
                status = #{status},
            </if>

            <if test="verify != null">
                verify = #{verify},
            </if>

            <if test="supplierId != null">
                supplier_id = #{supplierId},
            </if>
        </set>
        where id = #{id}
    </update>

    <select id="findByPhone" resultMap="UserResultMapVo">
        select
        <include refid="Base_Column_List" />
        from user
        where phone= #{phone}
    </select>

    <select id="findByOpenId" resultMap="UserResultMapVo">
        select
        <include refid="Base_Column_List" />
        from user
        where openId= #{openId}
    </select>
</mapper>