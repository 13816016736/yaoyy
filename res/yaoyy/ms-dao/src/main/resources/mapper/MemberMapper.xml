<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ms.dao.MemberDao">
    <resultMap id="MemberResultMap" type="com.ms.dao.model.Member">
        <id column="id" property="id"/>
        <result column="username" property="username"/>
        <result column="password" property="password"/>
        <result column="salt" property="salt"/>
        <result column="name" property="name"/>
        <result column="mobile" property="mobile"/>
        <result column="roleName" property="roleName"/>
        <result column="roleId" property="roleId"/>
        <result column="is_del" property="isDel"/>
        <result column="create_date" property="createDate"/>
        <result column="update_date" property="updateDate"/>
    </resultMap>

    <sql id="Base_Column_List">
        id,username,password,salt,name,mobile,email,is_del,create_date,update_date
    </sql>

    <select id="findById" parameterType="java.lang.Integer" resultMap="MemberResultMap">
        select
        <include refid="Base_Column_List"/>
        from member
        where id = #{id}
    </select>

    <select id="findAll" resultMap="MemberResultMap">
        select
        <include refid="Base_Column_List"/>
        from member
    </select>

    <delete id="deleteById" parameterType="java.lang.Integer">
        delete from member
        where id = #{id}
    </delete>

    <insert id="create" useGeneratedKeys="true" keyProperty="id" parameterType="com.ms.dao.model.Member">
        insert into
        member (username,password,salt,name,mobile,email,is_del,create_date,update_date)
        values
        (#{username},#{password},#{salt},#{name},#{mobile},#{email},#{isDel},#{createDate},#{updateDate})
    </insert>

    <update id="update" parameterType="com.ms.dao.model.Member">
        update member
        <set>

            <if test="username != null">
                username = #{username},
            </if>

            <if test="password != null">
                password = #{password},
            </if>

            <if test="salt != null">
                salt = #{salt},
            </if>

            <if test="name != null">
                name = #{name},
            </if>

            <if test="mobile != null">
                mobile = #{mobile},
            </if>
            <if test="email != null">
                email = #{email},
            </if>
            <if test="isDel != null">
                is_del = #{isDel},
            </if>

            <if test="createDate != null">
                create_date = #{createDate},
            </if>

            <if test="updateDate != null">
                update_date = #{updateDate},
            </if>

        </set>
        where id = #{id}
    </update>


    <!-- 通过用户名查找用户-->
    <select id="findByUsername" parameterType="java.lang.String" resultMap="MemberResultMap">
        select
        <include refid="Base_Column_List"/>
        from member
        where username = #{username} and is_del = false
    </select>

    <!-- 条件查询User-->
    <select id="findByCondition" parameterType="com.ms.dao.vo.MemberVo" resultMap="MemberResultMap">
        select m.*,r.name as roleName,r.id as roleId from member m
        left join role_member rm on m.id = rm.member_id
        left join role r on rm.role_id = r.id
        where 1=1
        <if test="id != null ">
            and m.id = #{id}
        </if>
        <if test="username != null and username != ''">
            and m.username like "%"#{username}"%"
        </if>
        <if test="name != null and name != ''">
            and m.name like "%"#{name}"%"
        </if>
        <if test="email != null and email != ''">
            and m.email like "%"#{email}"%"
        </if>
        <if test="isDel != null ">
            and m.is_del = #{isDel}
        </if>
        <if test="roleId != null ">
            and r.id = #{roleId}
        </if>
    </select>

    <select id="findResourcesByUserName" parameterType="java.lang.String" resultType="com.ms.dao.model.Resources">
        select d.* from member a
        left join role_member b on a.id = b.member_id
        left join role_resources c on c.role_id = b.role_id
        left join resources d on c.resources_id = d.id
        where username = #{username}
    </select>


</mapper>