<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ms.dao.FollowCommodityDao">
    <resultMap id="FollowCommodityResultMap" type="com.ms.dao.model.FollowCommodity">
            <id column="id"  property="id" />
            <result column="commodity_id"  property="commodityId" />
            <result column="price"  property="price" />
            <result column="user_id"  property="userId" />
            <result column="create_time"  property="createTime" />
            <result column="status"  property="status" />
    </resultMap>

    <resultMap id="FollowCommodityResultMapVo" type="com.ms.dao.vo.FollowCommodityVo" extends="FollowCommodityResultMap">
            <result column="currentPrice"  property="currentPrice" />
            <result column="title"  property="title" />
            <result column="name"  property="name" />
        
    </resultMap>

    <sql id="Base_Column_List">
        id,commodity_id,price,user_id,create_time,status
    </sql>
    <sql id="Base_Column_List_Alisa">
        fc.id as id,fc.commodity_id as commodity_id,fc.price as price,fc.user_id as user_id,fc.create_time as create_time, fc.status as status
    </sql>

    <select id="findById" parameterType="java.lang.Integer" resultMap="FollowCommodityResultMap">
        select
        <include refid="Base_Column_List" />
        from follow_commodity
        where id = #{id}
    </select>

    <select id="findAll"  resultMap="FollowCommodityResultMap">
        select
        <include refid="Base_Column_List" />
        from follow_commodity
    </select>

    <select id="findByParams" resultMap="FollowCommodityResultMapVo" parameterType="com.ms.dao.vo.FollowCommodityVo">
        select
        <include refid="Base_Column_List_Alisa" />,
        co.title as title,co.name as name,co.price as currentPrice
        from follow_commodity fc
        inner join commodity co on fc.commodity_id = co.id
        <where>
            <if test="id != null">
                fc.id = #{id}
            </if>
            <if test="userId != null">
                and fc.user_id = #{userId}
            </if>
            <if test="commodityId != null">
                and fc.commodity_id = #{commodityId}
            </if>
        </where>
        ORDER BY co.category_id, fc.create_time DESC
    </select>

    <select id="count"  parameterType="java.lang.Integer" resultType="java.lang.Integer">
        select count(id)
        from follow_commodity WHERE  user_id = #{userId} and status = 1
    </select>

    <delete id="deleteById" parameterType="java.lang.Integer">
        delete from follow_commodity
        where id = #{id}
    </delete>

    <delete id="unwatch" parameterType="java.lang.Integer">
        delete from follow_commodity
        <where>
            <if test="followId != null">
                id = #{followId}
            </if>
            <if test="userId != null">
                and user_id = #{userId}
            </if>
            <if test="commodityId != null">
                and commodity_id = #{commodityId}
            </if>
        </where>
    </delete>

    <insert id="create" useGeneratedKeys="true" keyProperty="id" parameterType="com.ms.dao.model.FollowCommodity">
        insert into
        follow_commodity (commodity_id,price,user_id,create_time,status)
        values
        (#{commodityId},#{price},#{userId},#{createTime},#{status})
    </insert>

    <update id="update" parameterType="com.ms.dao.model.FollowCommodity">
        update follow_commodity
        <set>
                                                        
            <if test="commodityId != null">
                commodity_id = #{commodityId},
            </if>
                                            
            <if test="price != null">
                price = #{price},
            </if>
                                            
            <if test="userId != null">
                user_id = #{userId},
            </if>
                                            
            <if test="createTime != null">
                create_time = #{createTime},
            </if>

            <if test="status != null">
                status = #{status},
            </if>
        </set>
        where id = #{id}
    </update>

    <update id="updateStatus" parameterType="java.lang.Integer">
        update follow_commodity SET  status = 1
        where commodity_id = #{commodityId}
    </update>

    <update id="changeRead" parameterType="java.lang.Integer">
        update follow_commodity SET  status = 0
        where user_id = #{userId}
    </update>
</mapper>